=head1 LICENSE

Copyright [1999-2015] Wellcome Trust Sanger Institute and the EMBL-European Bioinformatics Institute
Copyright [2016-2022] EMBL-European Bioinformatics Institute

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=head1 CONTACT

Please email comments or questions to the public Ensembl
developers list at <http://lists.ensembl.org/mailman/listinfo/dev>.

Questions may also be sent to the Ensembl help desk at
<http://www.ensembl.org/Help/Contact>.

=head1 NAME

IntronCheck_conf

=head1 SYNOPSIS


=head1 DESCRIPTION

Check the models in your source_db against a set of introns generated by the RNA-seq
pipeline "HiveRNSeq_conf" and add a suffix to the models which have full intron support.
The data will be store in the target_db which is created at the beginning of the pipeline.
It does a lossless copy of genes, only the transcript and gene biotype is updated.

It can be useful when you have data of low confidence but which still can produce good
model. You can use the models with full support in a higher layer as long as you don't
have too many fragments

=cut

package IntronCheck_conf;

use strict;
use warnings;


use Bio::EnsEMBL::ApiVersion qw/software_version/;
use Bio::EnsEMBL::Analysis::Tools::Utilities qw(get_analysis_settings);
use base ('Bio::EnsEMBL::Analysis::Hive::Config::HiveBaseConfig_conf');


sub default_options {
  my ($self) = @_;

  return {
    # inherit other stuff from the base class
    %{ $self->SUPER::default_options() },
    'pipeline_name'   => $self->o('production_name').'_intron_check', #!!!!!!!!!!! What you want hive to call the pipeline, not the db name itself
    'production_name' => '',

    'user_r'   => '', #!!!!!!!!!!!
    'user'     => '', #!!!!!!!!!!!
    'password' => '', #!!!!!!!!!!!
    'port'     => '', #!!!!!!!!!!!

    'pipe_db_server' => $self->o('host'),
    'pipe_db_port'   => $self->o('port'),

    'dna_db_name'    => $self->o('dbowner').'_'.$self->o('production_name').'_core_'.$self->o('release_number'),
    'dna_db_server' => $self->o('data_dbs_server'),
    'dna_db_port'   => $self->o('data_dbs_port'),

    'data_dbs_server' => '',
    'data_dbs_port' => 4530,

    'intron_db_server' => $self->o('data_dbs_server'),
    'intron_db_port'   => $self->o('data_dbs_port'),

    'source_db_server' => $self->o('data_dbs_server'),
    'source_db_port'   => $self->o('data_dbs_port'),

    'target_db_name'   => $self->o('dbowner').'_'.$self->o('pipeline_name').'_'.$self->o('release_number'),
    'target_db_server' => $self->o('data_dbs_server'),
    'target_db_port'   => $self->o('data_dbs_port'),

    'intron_db' => {
      -dbname => $self->o('intron_db_name'),
      -host   => $self->o('intron_db_server'),
      -port   => $self->o('intron_db_port'),
      -user   => $self->o('user'),
      -pass   => $self->o('password'),
      -driver => $self->o('hive_driver'),
    },

    'source_db' => {
      -dbname => $self->o('source_db_name'),
      -host   => $self->o('source_db_server'),
      -port   => $self->o('source_db_port'),
      -user   => $self->o('user'),
      -pass   => $self->o('password'),
      -driver => $self->o('hive_driver'),
    },

    'target_db' => {
      -dbname => $self->o('target_db_name'),
      -host   => $self->o('target_db_server'),
      -port   => $self->o('target_db_port'),
      -user   => $self->o('user'),
      -pass   => $self->o('password'),
      -driver => $self->o('hive_driver'),
    },
    databases_to_delete => ['target_db'],
  };
}


sub pipeline_analyses {
  my ($self) = @_;

  return [
    {
      -logic_name => 'create_target_db',
      -module     => 'Bio::EnsEMBL::Analysis::Hive::RunnableDB::HiveCreateDatabase',
      -parameters => {
        source_db => $self->o('layering_db'),
        target_db => $self->o('target_db'),
        create_type => 'clone',
      },
      -rc_name    => 'default',
      -input_ids => [{}],
      -flow_into => {
        1 => ['create_toplevel_slices'],
      },
    },
    {
      -logic_name => 'create_toplevel_slices',
      -module     => 'Bio::EnsEMBL::Analysis::Hive::RunnableDB::HiveSubmitAnalysis',
      -parameters => {
        target_db => $self->o('dna_db'),
        iid_type => 'slice',
        coord_system_name => 'toplevel',
        include_non_reference => 1,
        top_level => 1,
        feature_constraint => 1,
        feature_type => 'gene',
        feature_dbs => [$self->o('source_db')],
      },
      -flow_into => {
        2 => ['split_slices_on_intergenic'],
      },
      -rc_name    => 'default',
    },
    {
      -logic_name => 'split_slices_on_intergenic',
      -module     => 'Bio::EnsEMBL::Analysis::Hive::RunnableDB::HiveFindIntergenicRegions',
      -parameters => {
        dna_db => $self->o('dna_db'),
        input_gene_dbs => [$self->o('source_db')],
        iid_type => 'slice',
      },
      -batch_size => 100,
      -rc_name    => 'transcript_finalisation',
      -flow_into => {
        2 => ['intron_check'],
      },
    },
    {
      -logic_name => 'intron_check',
      -module     => 'Bio::EnsEMBL::Analysis::Hive::RunnableDB::HiveHomologyRNASeqIntronsCheck',
      -parameters => {
        dna_db => $self->o('dna_db'),
        intron_db => $self->o('intron_db'),
        source_db => $self->o('source_db'),
        target_db => $self->o('target_db'),
        source_logic_name => $self->o('source_logic_name'),
      },
      -batch_size => 100,
      -rc_name    => 'transcript_finalisation',
    },
  ];
}


sub resource_classes {
  my $self = shift;

  return {
    'default' => { LSF => $self->lsf_resource_builder('production-rh7', 2000, [$self->default_options->{'pipe_db_server'}, $self->default_options->{'dna_db_server'}])},
  }
}

1;
