# Bio::EnsEMBL::Analysis::Config::GeneBuild::BlastRNASeqPep;
# 
# Cared for by EnsEMBL (ensembl-dev@ebi.ac.uk)
#
# Copyright GRL & EBI
#
# You may distribute this module under the same terms as perl itself

# POD documentation - main docs before the code


package Bio::EnsEMBL::Analysis::Config::GeneBuild::BlastRNASeqPep;

use strict;
use vars qw( %Config );

# Hash containing config info
%Config = (

         BLASTRNASEQPEP_CONFIG_BY_LOGIC => 
           {
            DEFAULT => {
	    		# databases are defined as hash keys from Bio::EnsEMBL::Analysis::Config::Databases
                        OUTPUT_DB => '',
			MODEL_DB  => '',
			
			# If left blank all refined genes will be fetched
			LOGICNAME => '',
			
			# path to index to fetch the sequence of the blast hit to calculate % coverage
			INDEX => '/path/to/indexed/sequences/from/the/blastdb/index',
	             },
	    }
	    
);

sub import {
  my ($callpack) = caller(0); # Name of the calling package
  my $pack = shift; # Need to move package off @_

  # Get list of variables supplied, or else everything
  my @vars = @_ ? @_ : keys( %Config );
  return unless @vars;
  
  # Predeclare global variables in calling package
  eval "package $callpack; use vars qw("
    . join(' ', map { '$'.$_ } @vars) . ")";
    die $@ if $@;


    foreach (@vars) {
	if ( defined $Config{$_} ) {
            no strict 'refs';
	    # Exporter does a similar job to the following
	    # statement, but for function names, not
	    # scalar variables:
	    *{"${callpack}::$_"} = \$Config{ $_ };
	} else {
	    die "Error: Config: $_ not known\n";
	}
    }
}

1;
