#
# Ensembl configuration file used in 
#
# Bio::EnsEMBL::Analysis::RunnableDB::OrthologueEvaluator
#
# Copyright (c) 2006 Ensembl
#


=head1 NAME

Bio::EnsEMBL::Analysis::Config::GeneBuild::OrthologueEvaluator

=head1 SYNOPSIS

    Bio::EnsEMBL::Analysis::Config::GeneBuild::OrthologueEvaluator

=head1 DESCRIPTION


OrthologueEvaluator - Configuration 

This is the main configuration file for OrthologueEvaluator, a perl 
module which uses information from an Ensembl Compara database to 
compare and assess gene predictions. 

The parameters to connect to various databases are defiend in 

  - modules/Bio/EnsEMBL/Analysis/Config/GeneBuild/Databases.pm 
  - modules/Bio/EnsEMBL/Analysis/Config/OrthologueEvaluator.pm 

The general function of this config file is to import  a number of 
standard global variables into the calling package. Without arguments 
all the standard variables are set, and with a list, only those variables 
whose names are provided are set.  The module will die if a variable 
which doesn\'t appear in its C<%Config> hash is asked to be set.

The variables can also be references to arrays or hashes.

Edit C<%Config> to add or alter variables.

All the variables are in capitals, so that they resemble environment
variables.

=head1 CONTACT

B<ensembl-dev@ebi.ac.uk>

=cut

package Bio::EnsEMBL::Analysis::Config::GeneBuild::OrthologueEvaluator; 

use strict;
use vars qw(%Config);

%Config= 
 (

   #
   # 
   # This is because the output-database as well as the directory where the sequences 
   # will be dumped is defined in the Exonerte2Genes-configuration   
   #  
   # The value of EXONERATE_2_GENES_LOGIC_NAME has to point to a hashkey in Exonerate2Genes.pm 
   # 
   
   MAIN_CONFIG =>  
     { 
       LOCATION_OF_COMPARA_REGISTRY_FILE =>  '/nfs/acari/jhv/fsk_compara_reg.reg' , 

       SEQUENCE_DUMP_BASE_DIR => "/lustre/work1/ensembl/jhv/project_orth_analysis/seq_dump_cow" ,  

       # decide which analysis you like to run 
       
       RUN_LOCATE_MISSING_ORTHOLOGUES => 1,   
       RUN_FIND_PARTIAL_GENES => 1, 
       RUN_FIND_SPLIT_GENES => 1,

       # ONLY use the species name used for the compara run 
       # which is also stored in the genome_db table of the compara database  

       QUERY_SPECIES => 'Bis taurus',   
     },
                  
   #
   # This section configures the MissingOrthologue  run : 
   #
   # input_id-format  :  
   #
   #       ANALYSIS_SET{$key}:chromosome:BROADD2:1:22222:99999:1 
   # e.g. logic_name:chromosome:BROADD2:1:22222:99999:1 
   #  
   # 
   LOCATE_MISSING_ORTHOLOGUES=>  
     
     { 
        
         # 
         # the Runnable will identify one2one orthologues in trusted set 
         # and check if there's any known one2one orth between new_species 
         # and one of the members of the trusted set    
         # 
         
           DEFAULT_GENE_BIOTYPES => ['protein_coding'] ,   
          
         #
         # Define a species pair to find one2one orthologues for and than compare 
         # with QUERY_SPECIES 
         # These species should be not too dependend (rat and mus ) and not too distant ...
         #
          
          ANALYSIS_SETS => {          
                              #    
                              # WARNING !          
                              #
                              # ONLY use the species name used for the compara run 
                              # which is also stored in the genome_db table of the compara database  
                              # (e.g. 'Canis familiaris' , 'Bos taurus_newbuild' .... ) 
                              # 
              hum_mus_one2one     => ['Homo sapiens', 'Mus musculus'], 
              hum_old_dog_one2one => ['Homo sapiens', 'Canis familiaris'], 
              hum_old_cow_one2one => ['Homo sapiens', 'Bos taurus'], 
          } ,  

       },
   


 
    #
    # This section configures the FindPartialGenes-Runnable  
    #
    # input_id-format :
    # 
    #       ANALYSIS_SET{KEY}:chromosome:BROADD2:chromosome:1:222222:333333:1  
    # e.g.  find_paritals:chromosome:BROADD2:chromosome:1:222222:333333:1  
    #
    # input-id is created by setup script 
    # setup script creates post-analysis (find_partials) 
    # if you like to add new post_analysis 

    FIND_PARTIAL_GENES => 
    {   
                  # biotype of genes to fetch out of the db which was used 
                  # for the compara run in registry file   
                  DEFAULT_GENE_BIOTYPES => ['protein_coding'] ,   
                           

                  # analysis_sets consist of logic_name and members. First, we 
                  # find orthologues between the QUERY SPECIES and main_orthologue, 
                  # and the length of these two genes is noted. 
                  # than we find orthologues between main_orthologue and comparision_1 
                  # and main_orthologue and comparision_2 and calculate the ratio between 
                  # these pairs . if the length difference is significant between the 
                  # gene predictions in the other species and query-main, we've found partials.
                  #
                  #
                  ANALYSIS_SETS => 
                  {   

                      find_partials =>
                      { 
                     
                           # WARNING !
                           # ONLY use the species name which is also stored in the genome_db 
                           # table of the compara-database you're using (and in the reg-file of course!)
                           # 
                          
                           # well annoteted spec which have a bit of distantance as well as conserverd genes   

                           'MAIN_ORTH'   => 'Homo sapiens',          
                           'TEST_SPEC_1' => 'Mus musculus',    
                           'TEST_SPEC_2' => 'Canis familiaris',
                                                    
                           'RATIO_MAIN_vs_QUERY' =>        0.75,
                           'RATIO_MAIN_vs_SPEC_1_LOW' =>   0.9,
                           'RATIO_MAIN_vs_SPEC_1_HIGH' =>  1.1,
                           'RATIO_MAIN_vs_SPEC_2_LOW' =>   0.9, 
                           'RATIO_MAIN_vs_SPEC_2_HIGH' =>  1.1,

                        },
                        # new_logic_name => 
                        # {
                        #  MAIN_ORTH   => "Mus musculus", 
                        #  TEST_SPEC_1 => "Canis familiaris", 
                        #  TEST_SPEC_2 => ".....", 
                        #  .... 
                        # }
                   }
    }, 
    
    # 
    # This section configures the FindSplitGene.pm RunnableDB 
    # 

    FIND_SPLIT_GENES =>{   
                              ANALYSIS_SETS => 
                              {   
                                   hum_dog_split=>
                                   { 
                                     'INFORMANT' => 'Homo sapiens',          
                                     'INFORMANT_PERC_COV' => 20,  

                                     'TARGETTED' => 'Canis familiaris', 
                                     'TARGETTED_PERC_COV' => 70,
                                    }, 

                                   hum_mus_split=>
                                   { 
                                     'INFORMANT' => 'Homo sapiens',          
                                     'INFORMANT_PERC_COV' => 20,  

                                     'TARGETTED' => 'Mus musculus', 
                                     'TARGETTED_PERC_COV' => 70,
                                    },
                               },
                          }
  );




sub import {
    my ($callpack) = caller(0); 
    my $pack = shift; 
    my @vars = @_ ? @_ : keys(%Config);
    return unless @vars;
    eval "package $callpack; use vars qw("
         . join(' ', map { '$'.$_ } @vars) . ")";
    die $@ if $@;
    foreach (@vars) {
	if (defined $Config{ $_ }) {
            no strict 'refs';
	    *{"${callpack}::$_"} = \$Config{ $_ };
	} else {
	    die "Error: Config: $_ not known\n";
	}
    }
}
1;
