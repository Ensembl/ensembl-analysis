setup_rnaseq_pipeline.pl
------------------------
$Source: /tmp/ENSCOPY-ENSEMBL-ANALYSIS/scripts/RNASeq/README,v $
$Revision: 1.7 $

This document describes how to automate setting up of a BWA
alignment and processing pipeline using a configuration file,
setup_rnaseq_pipeline_config.pm, and a tab-delimited text file that
contains the file names of the fastq files to align and associated meta
data to be parsed and stored in the final BAM files.

In order for the pipeline to run you will need four databases to be
entered into the Bio/EnsEMBL/Analysis/Config/Databases.pm config:

REFERENCE_DB    - a pipeline database either with DNA sequence in it or
                  else you need to define DNADB in Databases.pm to point
                  at a suitable database that doe contain DNA.
ROUGH_DB        - a datatabase to store the rough models.
REFINED_DB      - a datatabase to store the refined models.
BLAST_DB        - a datatabase to store the  blast filtered models
                  configuration module.

You will also need to specify an indexed fasta file of the unmasked
genome sequence that has been cleaned of the Ensembl style sequence
headers, and a wublast formatted uniprot sequence database with an
indicate generated index, this is used to compare the open reading
frames of the RNASeq models to known proteins to decide if they are full
length or fragmented models.

The fasta file of the genome has to have ensembl style headers removed
and replaced with simple headers, i.e.

  >NT_166433 supercontig NT_166433

rather than

  >supercontig:NCBIM37:NT_166433:1:83612:1 supercontig NT_166433

Only the accession number is essential for this header, the rest of the
line will be ignored, i.e. the following is all that is required for
each header line:

  >NT_166433

You can clean up the headers using a regex like this:

  awk '/^>/ { printf(">%s\n", $NF) } !/^>/ { print }' \
    toplevel.fa >toplevel_clean.fa

The indexing can be run like this:

  bsub /software/solexa/bin/bwa index -a bwtsw toplevel_clean.fa

Once you have these things you can parse the txt file to create
your analyses rules and config needed to run the pipeline.  See
setup_rnaseq_pipeline_config.pm for details of the configuration.

The script assumes the lanes are arranged in rows with the first row
being column headers.  It assigns different columns to different tags
in the BAM file, the column numbers are entered into the config file,
comma-separated if more than one column needs to be associated with a
single tag.  There are also column numbers associated with paired reads
and read length in case these are not consistent across your data set.
If these are left blank then the default values will be used.  Once
the configuration file is filled out, running the script will give a
sample output of the first row of data in the table for you to check.
If you are happy, answering 'y' will write the config files and the
analyses to the pipeline database.  The rulemanager should then run the
BWA pipeline.  The result will be sorted and indexed BAM files in the
output directory.

The pipeline has a samtools flagstat test at the end to give you some
mapping statistics and will fail if the number of reads in the BAM file
is not the same as the number of reads in the fastq file to begin with.

Please note:
============
The fastq files need to have unique filenames that have a fastq or fq
suffix and a read 1 or 2 indicator in there that can be parsed by a
regular expression if they are paired end reads.

If the file names look anything like this:

  File_R1.fqaa    File_R2.fqaa
  File_R1.fqab    File_R2.fqab

They will not have unique names when the suffix is removed and samtools
will fail.  They will need to be changed to something like this before
the setup script is run:

  File_R1_aa.fq    File_R2_aa.fq
  File_R1_ab.fq    File_R2_ab.fq

One the BWA pipeline has been run, running the setup_rnaseq_pipeline.pl
script again will print out the bsub commands needed to merge, sort
and index the BAM files generated from the BWA stage.  It will also
configure the pipeline ready to run the bam2genes step.  Running the
rulemanager will start the second stage of the process once the merge
steps are finished.

The third and final stage of the process is configured by running the
setup_rnaseq_pipeline.pl script for a third time once bam2genes has
finished.  Again, the pipeline is configured automatically and running
the rulemanager after the script will re-start the pipeline and it
should then run to completion.
