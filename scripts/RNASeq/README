# Copyright [1999-2015] Wellcome Trust Sanger Institute and the EMBL-European Bioinformatics Institute
# Copyright [2016-2022] EMBL-European Bioinformatics Institute
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

setup_rnaseq_pipeline.pl
------------------------

This document describes how to automate setting up of a BWA
alignment and processing pipeline using a configuration file,
setup_rnaseq_pipeline_config.pm, and a tab-delimited text file that
contains the file names of the fastq files to align and associated meta
data to be parsed and stored in the final BAM files.

When running the RNASeq pipeline use a separate config directory structure to
that being used in the normal genebuild pipeline. Adjust your PERL5LIB
environment variable path to match.

In order for the pipeline to run you will need four databases to be
entered into the Bio/EnsEMBL/Analysis/Config/Databases.pm config:

REFERENCE_DB    - a pipeline database either with DNA sequence in it or
                  else you need to define DNADB in Databases.pm to point
                  at a suitable database that does contain DNA.
ROUGH_DB        - a database to store the rough models.
REFINED_DB      - a database to store the refined models.
BLAST_DB        - a database to store the  blast filtered models
                  configuration module.

You will also need to specify an indexed fasta file of the unmasked
genome sequence that has been cleaned of the Ensembl style sequence
headers, and a wublast formatted uniprot sequence database with an
indicate generated index, this is used to compare the open reading
frames of the RNASeq models to known proteins to decide if they are full
length or fragmented models.

The fasta file of the genome has to have ensembl style headers removed
and replaced with simple headers, i.e.

  >NT_166433 supercontig NT_166433

rather than

  >supercontig:NCBIM37:NT_166433:1:83612:1 supercontig NT_166433

Only the accession number is essential for this header, the rest of the
line will be ignored, i.e. the following is all that is required for
each header line:

  >NT_166433

You can clean up the headers using a regex like this:

  awk '/^>/ { printf(">%s\n", $NF) } !/^>/ { print }' \
    toplevel.fa >toplevel_clean.fa

The indexing can be run like this:

  bsub /software/solexa/bin/bwa index -a bwtsw toplevel_clean.fa

Once you have these things you can parse the txt file to create
your analyses rules and config needed to run the pipeline.  See
setup_rnaseq_pipeline_config.pm for details of the configuration.

The script assumes the lanes are arranged in rows with the first row
being column headers.  It assigns different columns to different tags
in the BAM file, the column numbers are entered into the config file,
comma-separated if more than one column needs to be associated with a
single tag.  There are also column numbers associated with paired reads
and read length in case these are not consistent across your data set.
If these are left blank then the default values will be used.  Once
the configuration file is filled out, running the script will give a
sample output of the first row of data in the table for you to check.
If you are happy, answering 'y' will write the config files and the
analyses to the pipeline database.  The rulemanager should then run the
BWA pipeline.  The result will be sorted and indexed BAM files in the
output directory. If you are using paired end reads it is important
to specify this for each lane in the tab delimited file in order for
BWA to pair the reads correctly.

The pipeline has a samtools flagstat test at the end to give you some
mapping statistics and will fail if the number of reads in the BAM file
is not the same as the number of reads in the fastq file to begin with.

Please note:
============
The fastq files need to have unique filenames that have a fastq or fq
suffix and a read 1 or 2 indicator in there that can be parsed by a
regular expression if they are paired end reads.

If the file names look anything like this:

  File_R1.fqaa    File_R2.fqaa
  File_R1.fqab    File_R2.fqab

They will not have unique names when the suffix is removed and samtools
will fail.  They will need to be changed to something like this before
the setup script is run:

  File_R1_aa.fq    File_R2_aa.fq
  File_R1_ab.fq    File_R2_ab.fq

Once the BWA pipeline has been run, running the setup_rnaseq_pipeline.pl
script again will print out the bsub commands needed to merge, sort
and index the BAM files generated from the BWA stage.  It will also
configure the pipeline ready to run the bam2genes step.  Running the
rulemanager will start the second stage of the process once the merge
steps are finished. When running bam2genes it is important to decide if
you will run the models in paired or unpaired mode, this is set in the
config file. If you have sufficient paired end reads running in paired
mode is preferred as it produces rough models of a sensible length. If 
you have unpaired reads you can still produce models but it is difficult
to separate them so typically you end up with very long models. 

The third and final stage of the process is configured by running the
setup_rnaseq_pipeline.pl script for a third time once bam2genes has
finished.  Again, the pipeline is configured automatically and running
the rulemanager after the script will re-start the pipeline and it
should then run to completion.



Adding RNASeq data into an ensembl core-schema database
========
Quite often we have data for several tissues, for example heart, brain, 
kidney, liver. We want to display data from individual tissues and also
data from all tissues 'merged' together.

  BAM
For handover for release, we want to display a BAM file track for each 
tissue and also a BAM file of all the tissues merged. In the above 
example, we'd have a total of 5 BWA tracks.
Each of the 5 sets BAM files needs its own analysis_id and 
logic_name. Each analysis_id links to a unique row in the data_file 
table.

Example sus_scrofa_rnaseq_67_102

Analysis table: 
analysis_id     logic_name
141     pig_bwa_alveolar_macrophage
142     pig_bwa_whole_blood

The above logic_names are added to the production database with an 
analysis_description and appropriate web_data.

It might be helpful to add a link to the BAM file location on the FTP
site in the analysis description - see tilapia for an example:

eg. tilapia_bwa_blood
http://admin.ensembl.org/common/AnalysisDesc/Display?id=500

Paired-end 101 bp RNAseq reads from O. niloticus heart tissue. Data were obtained from the <a href="http://www.broadinstitute.org/scientific-community/science/projects/mammals-models/vertebrates-invertebrates/tilapia/tilapia-genom">Broad Institute</A> and aligned to the Orenil1.0 assembly using BWA. Download this BAM file from the <a href="ftp://ftp.ensembl.org/pub/data_files/oreochromis_niloticus/Orenil1.0/rnaseq/">Ensembl FTP</A> (file:<a
href="ftp://ftp.ensembl.org/pub/current_bam/oreochromis_niloticus/genebuild/heart_merged_sorted.bam">heart_merged_sorted.bam</A>).

Data_file table:
coord_system_id analysis_id     name    file_type
1       141     alveolar_macrophage_merged_sorted       BAM
1       142     whole_blood_merged_sorted       BAM

The coord_system_id columns refers to the highest level in the 
coord_system table, to which the assembly version is attached. In this
case it is chromosome.
The 'name' column in data_file refers to the file name on disk.

Files on disk, for FTP site: 
/path/to/sus_scrofa/Sscrofa10.2/rnaseq/alveolar_macrophage_merged_sorted.bam
/path/to/sus_scrofa/Sscrofa10.2/rnaseq/alveolar_macrophage_merged_sorted.bam.bai
/path/to/sus_scrofa/Sscrofa10.2/rnaseq/whole_blood_merged_sorted.bam
/path/to/sus_scrofa/Sscrofa10.2/rnaseq/whole_blood_merged_sorted.bam.bai

Note that each BAM files needs an index file.

NB these files must be set to read-only


  Gene models
For handover for release, we want to display an RNASeq gene model track
for each tissue and also one for the tissues merged. In the above
example, we'd have a total of 5 RNASeq tracks.
Each of the 5 sets of RNASeq gene models needs its own analysis_id and 
logic_name. RNASeq models are stored in the gene table.

  Intron features
For handover for release, we want to display an intron features track
for each tissue and also one for the tissues merged. In the above
example, we'd have a total of 5 intron tracks.
Each of the 5 sets of intron features needs its own analysis_id and 
logic_name. Intron features are stored in the dna_align_feature table.


